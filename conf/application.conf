
election {
  nodes = ["127.0.0.1:2182"]
  akka.remote.netty.tcp.port = 2182
}

cluster {
  nodes = ["127.0.0.1:2190"]
  akka.remote.netty.tcp.port = 2190

  # To ease the debug
  soft-work-distribution-ms = 10000
}

play.akka.actor-system = "test-system"

akka {
  loggers = [ "akka.event.slf4j.Slf4jLogger" ]
  loglevel = "DEBUG"

  log-dead-letters = 0
  log-dead-letters-during-shutdown = true

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
    warn-about-java-serializer-usage = false
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2210
    }
  }
}

filesgate {

  # List of the different pipelines we want to have
  pipelines {
    # Name of the pipeline as key
    example {


      steps = [
        # Where should we fetch the data? This step is the only one mandatory, but, you can use a default one already existing, with the
        # proper configuration in "default-steps"
        {type: "source", name:"Core:Package:example.source", max-instances:1},

        # To detect if the current pipeline should be used with a given message
        {type: "matcher", name:"Core:Package:example.matcher", max-instances:1},

        {type: "predownload",name: "Core:Package:example.preDownload", max-instances: 1},
        {type: "download",name: "Core:Package:example.download", max-instances: 1},
        {type: "prestorage", name: "Core:Package:example.preStorage", max-instances: 1},
        {type: "storage", name: "Core:Package:example.storage", max-instances: 1},
        {type: "poststorage",name: "Core:Package:example.postStorage", max-instances: 1}
      ]

      pipeline-instance {
        quantity = 1
      }
    }
  }
}

# More general configuration
play.http.forwarded.trustedProxies = ["0.0.0.0/0", "::/0"]
play.http.secret.key = "changeme"
play.i18n {
  langs = [ "en" ]
}

